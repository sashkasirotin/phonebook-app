openapi: 3.0.1
info:
  title: Contact API
  description: Manage contacts and authentication
  version: '1.0'
servers:
  - url: http://localhost:8080
    description: Generated server url
tags:
  - name: Contacts
    description: Endpoints for managing contacts and authentication
paths:
  /api/v1/contacts/{id}:
    get:
      tags:
        - Contacts
      summary: Get a contact by ID
      operationId: getContact
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID of the contact
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Contact found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Contact'
        '404':
          description: Contact not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Contact'
    put:
      tags:
        - Contacts
      summary: Update an existing contact by ID
      operationId: updateContact
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID of the contact to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Updated contact details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      responses:
        '200':
          description: Contact updated
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Contact'
        '400':
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Contact'
        '404':
          description: Contact not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Contact'
    delete:
      tags:
        - Contacts
      summary: Delete a contact by ID
      operationId: deleteContact
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID of the contact to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Contact deleted
        '404':
          description: Contact not found
  /api/v1/contacts:
    get:
      tags:
        - Contacts
      summary: Get paginated list of contacts
      operationId: getContacts
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            format: int32
            default: 0
          example: 0
        - name: size
          in: query
          description: Page size
          required: false
          schema:
            type: integer
            format: int32
            default: 10
          example: 10
      responses:
        '200':
          description: Successfully retrieved contacts
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
        '403':
          description: Access denied
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
    post:
      tags:
        - Contacts
      summary: Create a new contact
      operationId: addContact
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        description: Contact to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      responses:
        '200':
          description: Contact created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Contact'
        '400':
          description: Invalid contact input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Contact'
  /api/v1/contacts/newUser:
    post:
      tags:
        - Contacts
      summary: Register a new user
      operationId: addNewUser
      requestBody:
        description: New user info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfo'
        required: true
      responses:
        '200':
          description: User registered
          content:
            '*/*':
              schema:
                type: string
  /api/v1/contacts/authenticate:
    post:
      tags:
        - Contacts
      summary: Authenticate user and return JWT token
      operationId: authenticateAndGetToken
      requestBody:
        description: Username and password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
        required: true
      responses:
        '200':
          description: Authentication successful
          content:
            '*/*':
              schema:
                type: string
        '403':
          description: Invalid credentials
          content:
            '*/*':
              schema:
                type: string
  /api/v1/contacts/search:
    get:
      tags:
        - Contacts
      summary: Search contacts by name or phone number
      operationId: searchContacts
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: query
          in: query
          description: Search query
          required: true
          schema:
            type: string
          example: John
      responses:
        '200':
          description: Search results returned
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
components:
  schemas:
    Contact:
      type: object
      properties:
        id:
          type: integer
          format: int64
        version:
          type: integer
          format: int32
        firstName:
          type: string
        lastName:
          type: string
        phoneNumber:
          type: string
        address:
          type: string
      required:
        - firstName
        - lastName
        - phoneNumber
    UserInfo:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        email:
          type: string
        password:
          type: string
        roles:
          type: string
    AuthenticationRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
